Terminals unused in grammar

   THEN


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: EXTDEFS

    2 EXTDEFS: EXTDEF EXTDEFS
    3        | %empty

    4 EXTDEF: SPEC EXTVARS SEMI
    5       | SPEC FUNC STMTBLOCK

    6 EXTVARS: DEC
    7        | DEC COMMA EXTVARS
    8        | %empty

    9 SPEC: TYPE
   10     | STSPEC

   11 STSPEC: STRUCT OPTTAG LC DEFS RC
   12       | STRUCT ID

   13 OPTTAG: ID
   14       | %empty

   15 VAR: ID
   16    | VAR LB INT RB
   17    | VAR LB HEXINT RB

   18 FUNC: ID LP PARAS RP

   19 PARAS: PARA COMMA PARAS
   20      | PARA
   21      | %empty

   22 PARA: SPEC VAR

   23 STMTBLOCK: LC DEFS STMTS RC

   24 STMTS: STMT STMTS
   25      | %empty

   26 STMT: EXP SEMI
   27     | STMTBLOCK
   28     | RETURN EXP SEMI
   29     | IF LP EXP RP STMT ESTMT
   30     | FOR LP FEXP SEMI FEXP SEMI FEXP RP STMT
   31     | CONT SEMI
   32     | BREAK SEMI

   33 ESTMT: ELSE STMT
   34      | %empty

   35 DEFS: DEF DEFS
   36     | %empty

   37 DEF: SPEC DECS SEMI

   38 DECS: DEC COMMA DECS
   39     | DEC

   40 DEC: VAR
   41    | VAR ASSIGNOP INIT

   42 INIT: EXP
   43     | LC ARGS RC

   44 EXP: LP EXP RP
   45    | ID LP ARGS RP
   46    | ID ARRS
   47    | EXP DOT ID
   48    | INT
   49    | HEXINT
   50    | UNARYOP EXP
   51    | EXP BINARYOP EXP
   52    | MINUS EXP
   53    | EXP MINUS EXP
   54    | EXP PLUS EXP
   55    | EXP SHIFTOP EXP
   56    | EXP COMPAREOP EXP
   57    | EXP EQUALOP EXP
   58    | EXP BITXOR EXP
   59    | EXP BITOR EXP
   60    | EXP BITAND EXP
   61    | EXP LOGICALAND EXP
   62    | EXP LOGICALOR EXP
   63    | EXP BINASSIGNOP EXP
   64    | EXP ASSIGNOP EXP

   65 FEXP: EXP
   66     | %empty

   67 ARRS: LB EXP RB ARRS
   68     | %empty

   69 ARGS: EXP COMMA ARGS
   70     | EXP


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 16 48
HEXINT (259) 17 49
ID (260) 12 13 15 18 45 46 47
UNARYOP (261) 50
BINARYOP (262) 51
PLUS (263) 54
MINUS (264) 52 53
SHIFTOP (265) 55
COMPAREOP (266) 56
EQUALOP (267) 57
BITAND (268) 60
BITXOR (269) 58
BITOR (270) 59
LOGICALAND (271) 61
LOGICALOR (272) 62
BINASSIGNOP (273) 63
TYPE (274) 9
SEMI (275) 4 26 28 30 31 32 37
COMMA (276) 7 19 38 69
DOT (277) 47
ASSIGNOP (278) 41 64
LP (279) 18 29 30 44 45
RP (280) 18 29 30 44 45
LB (281) 16 17 67
RB (282) 16 17 67
LC (283) 11 23 43
RC (284) 11 23 43
STRUCT (285) 11 12
RETURN (286) 28
IF (287) 29
THEN (288)
ELSE (289) 33
BREAK (290) 32
CONT (291) 31
FOR (292) 30
NOELSE (293)
UNMINUS (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
PROGRAM (41)
    on left: 1, on right: 0
EXTDEFS (42)
    on left: 2 3, on right: 1 2
EXTDEF (43)
    on left: 4 5, on right: 2
EXTVARS (44)
    on left: 6 7 8, on right: 4 7
SPEC (45)
    on left: 9 10, on right: 4 5 22 37
STSPEC (46)
    on left: 11 12, on right: 10
OPTTAG (47)
    on left: 13 14, on right: 11
VAR (48)
    on left: 15 16 17, on right: 16 17 22 40 41
FUNC (49)
    on left: 18, on right: 5
PARAS (50)
    on left: 19 20 21, on right: 18 19
PARA (51)
    on left: 22, on right: 19 20
STMTBLOCK (52)
    on left: 23, on right: 5 27
STMTS (53)
    on left: 24 25, on right: 23 24
STMT (54)
    on left: 26 27 28 29 30 31 32, on right: 24 29 30 33
ESTMT (55)
    on left: 33 34, on right: 29
DEFS (56)
    on left: 35 36, on right: 11 23 35
DEF (57)
    on left: 37, on right: 35
DECS (58)
    on left: 38 39, on right: 37 38
DEC (59)
    on left: 40 41, on right: 6 7 38 39
INIT (60)
    on left: 42 43, on right: 41
EXP (61)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64, on right: 26 28 29 42 44 47 50 51 52 53 54 55 56 57 58
    59 60 61 62 63 64 65 67 69 70
FEXP (62)
    on left: 65 66, on right: 30
ARRS (63)
    on left: 67 68, on right: 46 67
ARGS (64)
    on left: 69 70, on right: 43 45 69


State 0

    0 $accept: . PROGRAM $end

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 3 (EXTDEFS)

    PROGRAM  go to state 3
    EXTDEFS  go to state 4
    EXTDEF   go to state 5
    SPEC     go to state 6
    STSPEC   go to state 7


State 1

    9 SPEC: TYPE .

    $default  reduce using rule 9 (SPEC)


State 2

   11 STSPEC: STRUCT . OPTTAG LC DEFS RC
   12       | STRUCT . ID

    ID  shift, and go to state 8

    $default  reduce using rule 14 (OPTTAG)

    OPTTAG  go to state 9


State 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 10


State 4

    1 PROGRAM: EXTDEFS .

    $default  reduce using rule 1 (PROGRAM)


State 5

    2 EXTDEFS: EXTDEF . EXTDEFS

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 3 (EXTDEFS)

    EXTDEFS  go to state 11
    EXTDEF   go to state 5
    SPEC     go to state 6
    STSPEC   go to state 7


State 6

    4 EXTDEF: SPEC . EXTVARS SEMI
    5       | SPEC . FUNC STMTBLOCK

    ID  shift, and go to state 12

    $default  reduce using rule 8 (EXTVARS)

    EXTVARS  go to state 13
    VAR      go to state 14
    FUNC     go to state 15
    DEC      go to state 16


State 7

   10 SPEC: STSPEC .

    $default  reduce using rule 10 (SPEC)


State 8

   12 STSPEC: STRUCT ID .
   13 OPTTAG: ID .

    LC        reduce using rule 13 (OPTTAG)
    $default  reduce using rule 12 (STSPEC)


State 9

   11 STSPEC: STRUCT OPTTAG . LC DEFS RC

    LC  shift, and go to state 17


State 10

    0 $accept: PROGRAM $end .

    $default  accept


State 11

    2 EXTDEFS: EXTDEF EXTDEFS .

    $default  reduce using rule 2 (EXTDEFS)


State 12

   15 VAR: ID .
   18 FUNC: ID . LP PARAS RP

    LP  shift, and go to state 18

    $default  reduce using rule 15 (VAR)


State 13

    4 EXTDEF: SPEC EXTVARS . SEMI

    SEMI  shift, and go to state 19


State 14

   16 VAR: VAR . LB INT RB
   17    | VAR . LB HEXINT RB
   40 DEC: VAR .
   41    | VAR . ASSIGNOP INIT

    ASSIGNOP  shift, and go to state 20
    LB        shift, and go to state 21

    $default  reduce using rule 40 (DEC)


State 15

    5 EXTDEF: SPEC FUNC . STMTBLOCK

    LC  shift, and go to state 22

    STMTBLOCK  go to state 23


State 16

    6 EXTVARS: DEC .
    7        | DEC . COMMA EXTVARS

    COMMA  shift, and go to state 24

    $default  reduce using rule 6 (EXTVARS)


State 17

   11 STSPEC: STRUCT OPTTAG LC . DEFS RC

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 36 (DEFS)

    SPEC    go to state 25
    STSPEC  go to state 7
    DEFS    go to state 26
    DEF     go to state 27


State 18

   18 FUNC: ID LP . PARAS RP

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 21 (PARAS)

    SPEC    go to state 28
    STSPEC  go to state 7
    PARAS   go to state 29
    PARA    go to state 30


State 19

    4 EXTDEF: SPEC EXTVARS SEMI .

    $default  reduce using rule 4 (EXTDEF)


State 20

   41 DEC: VAR ASSIGNOP . INIT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36
    LC       shift, and go to state 37

    INIT  go to state 38
    EXP   go to state 39


State 21

   16 VAR: VAR LB . INT RB
   17    | VAR LB . HEXINT RB

    INT     shift, and go to state 40
    HEXINT  shift, and go to state 41


State 22

   23 STMTBLOCK: LC . DEFS STMTS RC

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 36 (DEFS)

    SPEC    go to state 25
    STSPEC  go to state 7
    DEFS    go to state 42
    DEF     go to state 27


State 23

    5 EXTDEF: SPEC FUNC STMTBLOCK .

    $default  reduce using rule 5 (EXTDEF)


State 24

    7 EXTVARS: DEC COMMA . EXTVARS

    ID  shift, and go to state 43

    $default  reduce using rule 8 (EXTVARS)

    EXTVARS  go to state 44
    VAR      go to state 14
    DEC      go to state 16


State 25

   37 DEF: SPEC . DECS SEMI

    ID  shift, and go to state 43

    VAR   go to state 14
    DECS  go to state 45
    DEC   go to state 46


State 26

   11 STSPEC: STRUCT OPTTAG LC DEFS . RC

    RC  shift, and go to state 47


State 27

   35 DEFS: DEF . DEFS

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 36 (DEFS)

    SPEC    go to state 25
    STSPEC  go to state 7
    DEFS    go to state 48
    DEF     go to state 27


State 28

   22 PARA: SPEC . VAR

    ID  shift, and go to state 43

    VAR  go to state 49


State 29

   18 FUNC: ID LP PARAS . RP

    RP  shift, and go to state 50


State 30

   19 PARAS: PARA . COMMA PARAS
   20      | PARA .

    COMMA  shift, and go to state 51

    $default  reduce using rule 20 (PARAS)


State 31

   48 EXP: INT .

    $default  reduce using rule 48 (EXP)


State 32

   49 EXP: HEXINT .

    $default  reduce using rule 49 (EXP)


State 33

   45 EXP: ID . LP ARGS RP
   46    | ID . ARRS

    LP  shift, and go to state 52
    LB  shift, and go to state 53

    $default  reduce using rule 68 (ARRS)

    ARRS  go to state 54


State 34

   50 EXP: UNARYOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 55


State 35

   52 EXP: MINUS . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 56


State 36

   44 EXP: LP . EXP RP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 57


State 37

   43 INIT: LC . ARGS RC

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP   go to state 58
    ARGS  go to state 59


State 38

   41 DEC: VAR ASSIGNOP INIT .

    $default  reduce using rule 41 (DEC)


State 39

   42 INIT: EXP .
   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73

    $default  reduce using rule 42 (INIT)


State 40

   16 VAR: VAR LB INT . RB

    RB  shift, and go to state 74


State 41

   17 VAR: VAR LB HEXINT . RB

    RB  shift, and go to state 75


State 42

   23 STMTBLOCK: LC DEFS . STMTS RC

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36
    LC       shift, and go to state 22
    RETURN   shift, and go to state 76
    IF       shift, and go to state 77
    BREAK    shift, and go to state 78
    CONT     shift, and go to state 79
    FOR      shift, and go to state 80

    $default  reduce using rule 25 (STMTS)

    STMTBLOCK  go to state 81
    STMTS      go to state 82
    STMT       go to state 83
    EXP        go to state 84


State 43

   15 VAR: ID .

    $default  reduce using rule 15 (VAR)


State 44

    7 EXTVARS: DEC COMMA EXTVARS .

    $default  reduce using rule 7 (EXTVARS)


State 45

   37 DEF: SPEC DECS . SEMI

    SEMI  shift, and go to state 85


State 46

   38 DECS: DEC . COMMA DECS
   39     | DEC .

    COMMA  shift, and go to state 86

    $default  reduce using rule 39 (DECS)


State 47

   11 STSPEC: STRUCT OPTTAG LC DEFS RC .

    $default  reduce using rule 11 (STSPEC)


State 48

   35 DEFS: DEF DEFS .

    $default  reduce using rule 35 (DEFS)


State 49

   16 VAR: VAR . LB INT RB
   17    | VAR . LB HEXINT RB
   22 PARA: SPEC VAR .

    LB  shift, and go to state 21

    $default  reduce using rule 22 (PARA)


State 50

   18 FUNC: ID LP PARAS RP .

    $default  reduce using rule 18 (FUNC)


State 51

   19 PARAS: PARA COMMA . PARAS

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 21 (PARAS)

    SPEC    go to state 28
    STSPEC  go to state 7
    PARAS   go to state 87
    PARA    go to state 30


State 52

   45 EXP: ID LP . ARGS RP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP   go to state 58
    ARGS  go to state 88


State 53

   67 ARRS: LB . EXP RB ARRS

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 89


State 54

   46 EXP: ID ARRS .

    $default  reduce using rule 46 (EXP)


State 55

   47 EXP: EXP . DOT ID
   50    | UNARYOP EXP .
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    DOT  shift, and go to state 72

    $default  reduce using rule 50 (EXP)


State 56

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   52    | MINUS EXP .
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    DOT  shift, and go to state 72

    $default  reduce using rule 52 (EXP)


State 57

   44 EXP: LP EXP . RP
   47    | EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73
    RP           shift, and go to state 90


State 58

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP
   69 ARGS: EXP . COMMA ARGS
   70     | EXP .

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    COMMA        shift, and go to state 91
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73

    $default  reduce using rule 70 (ARGS)


State 59

   43 INIT: LC ARGS . RC

    RC  shift, and go to state 92


State 60

   51 EXP: EXP BINARYOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 93


State 61

   54 EXP: EXP PLUS . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 94


State 62

   53 EXP: EXP MINUS . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 95


State 63

   55 EXP: EXP SHIFTOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 96


State 64

   56 EXP: EXP COMPAREOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 97


State 65

   57 EXP: EXP EQUALOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 98


State 66

   60 EXP: EXP BITAND . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 99


State 67

   58 EXP: EXP BITXOR . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 100


State 68

   59 EXP: EXP BITOR . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 101


State 69

   61 EXP: EXP LOGICALAND . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 102


State 70

   62 EXP: EXP LOGICALOR . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 103


State 71

   63 EXP: EXP BINASSIGNOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 104


State 72

   47 EXP: EXP DOT . ID

    ID  shift, and go to state 105


State 73

   64 EXP: EXP ASSIGNOP . EXP

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 106


State 74

   16 VAR: VAR LB INT RB .

    $default  reduce using rule 16 (VAR)


State 75

   17 VAR: VAR LB HEXINT RB .

    $default  reduce using rule 17 (VAR)


State 76

   28 STMT: RETURN . EXP SEMI

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 107


State 77

   29 STMT: IF . LP EXP RP STMT ESTMT

    LP  shift, and go to state 108


State 78

   32 STMT: BREAK . SEMI

    SEMI  shift, and go to state 109


State 79

   31 STMT: CONT . SEMI

    SEMI  shift, and go to state 110


State 80

   30 STMT: FOR . LP FEXP SEMI FEXP SEMI FEXP RP STMT

    LP  shift, and go to state 111


State 81

   27 STMT: STMTBLOCK .

    $default  reduce using rule 27 (STMT)


State 82

   23 STMTBLOCK: LC DEFS STMTS . RC

    RC  shift, and go to state 112


State 83

   24 STMTS: STMT . STMTS

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36
    LC       shift, and go to state 22
    RETURN   shift, and go to state 76
    IF       shift, and go to state 77
    BREAK    shift, and go to state 78
    CONT     shift, and go to state 79
    FOR      shift, and go to state 80

    $default  reduce using rule 25 (STMTS)

    STMTBLOCK  go to state 81
    STMTS      go to state 113
    STMT       go to state 83
    EXP        go to state 84


State 84

   26 STMT: EXP . SEMI
   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    SEMI         shift, and go to state 114
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73


State 85

   37 DEF: SPEC DECS SEMI .

    $default  reduce using rule 37 (DEF)


State 86

   38 DECS: DEC COMMA . DECS

    ID  shift, and go to state 43

    VAR   go to state 14
    DECS  go to state 115
    DEC   go to state 46


State 87

   19 PARAS: PARA COMMA PARAS .

    $default  reduce using rule 19 (PARAS)


State 88

   45 EXP: ID LP ARGS . RP

    RP  shift, and go to state 116


State 89

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP
   67 ARRS: LB EXP . RB ARRS

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73
    RB           shift, and go to state 117


State 90

   44 EXP: LP EXP RP .

    $default  reduce using rule 44 (EXP)


State 91

   69 ARGS: EXP COMMA . ARGS

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP   go to state 58
    ARGS  go to state 118


State 92

   43 INIT: LC ARGS RC .

    $default  reduce using rule 43 (INIT)


State 93

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   51    | EXP BINARYOP EXP .
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    DOT  shift, and go to state 72

    $default  reduce using rule 51 (EXP)


State 94

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   54    | EXP PLUS EXP .
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP  shift, and go to state 60
    DOT       shift, and go to state 72

    $default  reduce using rule 54 (EXP)


State 95

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   53    | EXP MINUS EXP .
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP  shift, and go to state 60
    DOT       shift, and go to state 72

    $default  reduce using rule 53 (EXP)


State 96

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   55    | EXP SHIFTOP EXP .
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    DOT       shift, and go to state 72

    $default  reduce using rule 55 (EXP)


State 97

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   56    | EXP COMPAREOP EXP .
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    SHIFTOP   shift, and go to state 63
    DOT       shift, and go to state 72

    $default  reduce using rule 56 (EXP)


State 98

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   57    | EXP EQUALOP EXP .
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP   shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    SHIFTOP    shift, and go to state 63
    COMPAREOP  shift, and go to state 64
    DOT        shift, and go to state 72

    $default  reduce using rule 57 (EXP)


State 99

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   60    | EXP BITAND EXP .
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP   shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    SHIFTOP    shift, and go to state 63
    COMPAREOP  shift, and go to state 64
    EQUALOP    shift, and go to state 65
    DOT        shift, and go to state 72

    $default  reduce using rule 60 (EXP)


State 100

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   58    | EXP BITXOR EXP .
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP   shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    SHIFTOP    shift, and go to state 63
    COMPAREOP  shift, and go to state 64
    EQUALOP    shift, and go to state 65
    BITAND     shift, and go to state 66
    DOT        shift, and go to state 72

    $default  reduce using rule 58 (EXP)


State 101

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   59    | EXP BITOR EXP .
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP   shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    SHIFTOP    shift, and go to state 63
    COMPAREOP  shift, and go to state 64
    EQUALOP    shift, and go to state 65
    BITAND     shift, and go to state 66
    BITXOR     shift, and go to state 67
    DOT        shift, and go to state 72

    $default  reduce using rule 59 (EXP)


State 102

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   61    | EXP LOGICALAND EXP .
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP   shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    SHIFTOP    shift, and go to state 63
    COMPAREOP  shift, and go to state 64
    EQUALOP    shift, and go to state 65
    BITAND     shift, and go to state 66
    BITXOR     shift, and go to state 67
    BITOR      shift, and go to state 68
    DOT        shift, and go to state 72

    $default  reduce using rule 61 (EXP)


State 103

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   62    | EXP LOGICALOR EXP .
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP    shift, and go to state 60
    PLUS        shift, and go to state 61
    MINUS       shift, and go to state 62
    SHIFTOP     shift, and go to state 63
    COMPAREOP   shift, and go to state 64
    EQUALOP     shift, and go to state 65
    BITAND      shift, and go to state 66
    BITXOR      shift, and go to state 67
    BITOR       shift, and go to state 68
    LOGICALAND  shift, and go to state 69
    DOT         shift, and go to state 72

    $default  reduce using rule 62 (EXP)


State 104

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   63    | EXP BINASSIGNOP EXP .
   64    | EXP . ASSIGNOP EXP

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73

    $default  reduce using rule 63 (EXP)


State 105

   47 EXP: EXP DOT ID .

    $default  reduce using rule 47 (EXP)


State 106

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP
   64    | EXP ASSIGNOP EXP .

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73

    $default  reduce using rule 64 (EXP)


State 107

   28 STMT: RETURN EXP . SEMI
   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    SEMI         shift, and go to state 119
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73


State 108

   29 STMT: IF LP . EXP RP STMT ESTMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    EXP  go to state 120


State 109

   32 STMT: BREAK SEMI .

    $default  reduce using rule 32 (STMT)


State 110

   31 STMT: CONT SEMI .

    $default  reduce using rule 31 (STMT)


State 111

   30 STMT: FOR LP . FEXP SEMI FEXP SEMI FEXP RP STMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    $default  reduce using rule 66 (FEXP)

    EXP   go to state 121
    FEXP  go to state 122


State 112

   23 STMTBLOCK: LC DEFS STMTS RC .

    $default  reduce using rule 23 (STMTBLOCK)


State 113

   24 STMTS: STMT STMTS .

    $default  reduce using rule 24 (STMTS)


State 114

   26 STMT: EXP SEMI .

    $default  reduce using rule 26 (STMT)


State 115

   38 DECS: DEC COMMA DECS .

    $default  reduce using rule 38 (DECS)


State 116

   45 EXP: ID LP ARGS RP .

    $default  reduce using rule 45 (EXP)


State 117

   67 ARRS: LB EXP RB . ARRS

    LB  shift, and go to state 53

    $default  reduce using rule 68 (ARRS)

    ARRS  go to state 123


State 118

   69 ARGS: EXP COMMA ARGS .

    $default  reduce using rule 69 (ARGS)


State 119

   28 STMT: RETURN EXP SEMI .

    $default  reduce using rule 28 (STMT)


State 120

   29 STMT: IF LP EXP . RP STMT ESTMT
   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73
    RP           shift, and go to state 124


State 121

   47 EXP: EXP . DOT ID
   51    | EXP . BINARYOP EXP
   53    | EXP . MINUS EXP
   54    | EXP . PLUS EXP
   55    | EXP . SHIFTOP EXP
   56    | EXP . COMPAREOP EXP
   57    | EXP . EQUALOP EXP
   58    | EXP . BITXOR EXP
   59    | EXP . BITOR EXP
   60    | EXP . BITAND EXP
   61    | EXP . LOGICALAND EXP
   62    | EXP . LOGICALOR EXP
   63    | EXP . BINASSIGNOP EXP
   64    | EXP . ASSIGNOP EXP
   65 FEXP: EXP .

    BINARYOP     shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    SHIFTOP      shift, and go to state 63
    COMPAREOP    shift, and go to state 64
    EQUALOP      shift, and go to state 65
    BITAND       shift, and go to state 66
    BITXOR       shift, and go to state 67
    BITOR        shift, and go to state 68
    LOGICALAND   shift, and go to state 69
    LOGICALOR    shift, and go to state 70
    BINASSIGNOP  shift, and go to state 71
    DOT          shift, and go to state 72
    ASSIGNOP     shift, and go to state 73

    $default  reduce using rule 65 (FEXP)


State 122

   30 STMT: FOR LP FEXP . SEMI FEXP SEMI FEXP RP STMT

    SEMI  shift, and go to state 125


State 123

   67 ARRS: LB EXP RB ARRS .

    $default  reduce using rule 67 (ARRS)


State 124

   29 STMT: IF LP EXP RP . STMT ESTMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36
    LC       shift, and go to state 22
    RETURN   shift, and go to state 76
    IF       shift, and go to state 77
    BREAK    shift, and go to state 78
    CONT     shift, and go to state 79
    FOR      shift, and go to state 80

    STMTBLOCK  go to state 81
    STMT       go to state 126
    EXP        go to state 84


State 125

   30 STMT: FOR LP FEXP SEMI . FEXP SEMI FEXP RP STMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    $default  reduce using rule 66 (FEXP)

    EXP   go to state 121
    FEXP  go to state 127


State 126

   29 STMT: IF LP EXP RP STMT . ESTMT

    ELSE  shift, and go to state 128

    $default  reduce using rule 34 (ESTMT)

    ESTMT  go to state 129


State 127

   30 STMT: FOR LP FEXP SEMI FEXP . SEMI FEXP RP STMT

    SEMI  shift, and go to state 130


State 128

   33 ESTMT: ELSE . STMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36
    LC       shift, and go to state 22
    RETURN   shift, and go to state 76
    IF       shift, and go to state 77
    BREAK    shift, and go to state 78
    CONT     shift, and go to state 79
    FOR      shift, and go to state 80

    STMTBLOCK  go to state 81
    STMT       go to state 131
    EXP        go to state 84


State 129

   29 STMT: IF LP EXP RP STMT ESTMT .

    $default  reduce using rule 29 (STMT)


State 130

   30 STMT: FOR LP FEXP SEMI FEXP SEMI . FEXP RP STMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36

    $default  reduce using rule 66 (FEXP)

    EXP   go to state 121
    FEXP  go to state 132


State 131

   33 ESTMT: ELSE STMT .

    $default  reduce using rule 33 (ESTMT)


State 132

   30 STMT: FOR LP FEXP SEMI FEXP SEMI FEXP . RP STMT

    RP  shift, and go to state 133


State 133

   30 STMT: FOR LP FEXP SEMI FEXP SEMI FEXP RP . STMT

    INT      shift, and go to state 31
    HEXINT   shift, and go to state 32
    ID       shift, and go to state 33
    UNARYOP  shift, and go to state 34
    MINUS    shift, and go to state 35
    LP       shift, and go to state 36
    LC       shift, and go to state 22
    RETURN   shift, and go to state 76
    IF       shift, and go to state 77
    BREAK    shift, and go to state 78
    CONT     shift, and go to state 79
    FOR      shift, and go to state 80

    STMTBLOCK  go to state 81
    STMT       go to state 134
    EXP        go to state 84


State 134

   30 STMT: FOR LP FEXP SEMI FEXP SEMI FEXP RP STMT .

    $default  reduce using rule 30 (STMT)
